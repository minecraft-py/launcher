from json import load
from pathlib import Path

ASSETS_HOME = Path(__file__).parent / "assets"


class LauncherAssets:
    def __init__(self):
        self._lang = "en_us"
        self._translation_en_us: dict[str, str] = load(
            open(ASSETS_HOME / "lang" / "en_us.json", "r")
        )
        self._translation_now: dict[str, str] = {}

    @property
    def language(self) -> str:
        return self._lang

    @language.setter
    def language(self, name: str):
        self._lang = name
        if self._lang == "en_us":
            return
        self._translation_now = load(
            open(ASSETS_HOME / "lang" / f"{self._lang}.json", "r", encoding="utf-8")
        )

    def translate(self, name: str, **kwargs: dict) -> str:
        """Get the translation of `name`.

        Localized strings are generated by the following order:
        1. the language chosen by the player
        2. English
        3. `name` parameter
        """
        s = self._translation_now.get(name, self._translation_en_us.get(name, name))
        if s != name:
            try:
                return s.format(**kwargs)
            except:
                return name
        else:
            return name


__all__ = "LauncherAssets"
